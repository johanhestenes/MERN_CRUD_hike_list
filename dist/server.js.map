{"version":3,"sources":["../server/server.js"],"names":["install","app","use","static","json","db","get","req","res","collection","find","toArray","then","hikes","metadata","total_count","length","_metadata","records","catch","error","console","log","status","message","post","newHike","body","created","Date","err","validateHike","insertOne","cleanupHike","result","_id","insertedId","limit","next","savedHike","hikeId","params","id","hike","put","updateOne","convertHike","delete","deleteOne","deleteResult","n","sendFile","resolve","connect","connection","listen"],"mappings":";;AAAA;;;;AAEA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;AAPA,2BAAiBA,OAAjB;;;AASA,MAAMC,MAAM,wBAAZ;AACAA,IAAIC,GAAJ,CAAQ,kBAAQC,MAAR,CAAe,QAAf,CAAR;AACAF,IAAIC,GAAJ,CAAQ,qBAAWE,IAAX,EAAR;;AAEA,IAAIC,EAAJ;;AAEAJ,IAAIK,GAAJ,CAAQ,YAAR,EAAsB,CAACC,GAAD,EAAMC,GAAN,KAAc;AAClCH,KAAGI,UAAH,CAAc,OAAd,EAAuBC,IAAvB,GAA8BC,OAA9B,GACCC,IADD,CACMC,SAAS;AACb,UAAMC,WAAW,EAAEC,aAAaF,MAAMG,MAArB,EAAjB;AACAR,QAAIJ,IAAJ,CAAS,EAAEa,WAAWH,QAAb,EAAuBI,SAASL,KAAhC,EAAT;AACD,GAJD,EAKCM,KALD,CAKOC,SAAS;AACdC,YAAQC,GAAR,CAAYF,KAAZ;AACAZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,0BAAyBJ,KAAM,EAA3C,EAArB;AACD,GARD;AASD,CAVD;;AAYAnB,IAAIwB,IAAJ,CAAS,YAAT,EAAuB,CAAClB,GAAD,EAAMC,GAAN,KAAc;AACnC,QAAMkB,UAAUnB,IAAIoB,IAApB;AACAD,UAAQE,OAAR,GAAkB,IAAIC,IAAJ,EAAlB;;AAEA,QAAMC,MAAM,eAAKC,YAAL,CAAkBL,OAAlB,CAAZ;AACA,MAAII,GAAJ,EAAS;AACPtB,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,oBAAmBM,GAAI,EAAnC,EAArB;AACA;AACD;;AAEDzB,KAAGI,UAAH,CAAc,OAAd,EAAuBuB,SAAvB,CAAiC,eAAKC,WAAL,CAAiBP,OAAjB,CAAjC,EAA4Dd,IAA5D,CAAiEsB,UAC/D7B,GAAGI,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA4B,EAAEyB,KAAKD,OAAOE,UAAd,EAA5B,EAAwDC,KAAxD,CAA8D,CAA9D,EACCC,IADD,EADF,EAIC1B,IAJD,CAIM2B,aAAa;AACjB/B,QAAIJ,IAAJ,CAASmC,SAAT;AACD,GAND,EAOCpB,KAPD,CAOOC,SAAS;AACdC,YAAQC,GAAR,CAAYF,KAAZ;AACAZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,0BAAyBJ,KAAM,EAA3C,EAArB;AACD,GAVD;AAWD,CArBD;;AAuBAnB,IAAIK,GAAJ,CAAQ,gBAAR,EAA0B,CAACC,GAAD,EAAMC,GAAN,KAAc;AACtC,MAAIgC,MAAJ;AACA,MAAI;AACFA,aAAS,sBAAajC,IAAIkC,MAAJ,CAAWC,EAAxB,CAAT;AACD,GAFD,CAEE,OAAOtB,KAAP,EAAc;AACdZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,2BAA0BJ,KAAM,EAA5C,EAArB;AACA;AACD;;AAEDf,KAAGI,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA4B,EAAEyB,KAAKK,MAAP,EAA5B,EAA6CH,KAA7C,CAAmD,CAAnD,EACCC,IADD,GAEC1B,IAFD,CAEM+B,QAAQ;AACZ,QAAI,CAACA,IAAL,EAAWnC,IAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,iBAAgBgB,MAAO,EAAnC,EAArB,EAAX,KACKhC,IAAIJ,IAAJ,CAASuC,IAAT;AACN,GALD,EAMCxB,KAND,CAMOC,SAAS;AACdC,YAAQC,GAAR,CAAYF,KAAZ;AACAZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,0BAAyBJ,KAAM,EAA3C,EAArB;AACD,GATD;AAUD,CAnBD;;AAqBAnB,IAAI2C,GAAJ,CAAQ,gBAAR,EAA0B,CAACrC,GAAD,EAAMC,GAAN,KAAc;AACtC,MAAIgC,MAAJ;AACA,MAAI;AACFA,aAAS,sBAAajC,IAAIkC,MAAJ,CAAWC,EAAxB,CAAT;AACD,GAFD,CAEE,OAAOtB,KAAP,EAAc;AACdZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,2BAA0BJ,KAAM,EAA5C,EAArB;AACA;AACD;;AAED,QAAMuB,OAAOpC,IAAIoB,IAAjB;AACA,SAAOgB,KAAKR,GAAZ;;AAEA,QAAML,MAAM,eAAKC,YAAL,CAAkBY,IAAlB,CAAZ;AACA,MAAIb,GAAJ,EAAS;AACPtB,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,oBAAmBM,GAAI,EAAnC,EAArB;AACA;AACD;;AAEDzB,KAAGI,UAAH,CAAc,OAAd,EAAuBoC,SAAvB,CAAiC,EAAEV,KAAKK,MAAP,EAAjC,EAAkD,eAAKM,WAAL,CAAiBH,IAAjB,CAAlD,EAA0E/B,IAA1E,CAA+E,MAC7EP,GAAGI,UAAH,CAAc,OAAd,EAAuBC,IAAvB,CAA4B,EAAEyB,KAAKK,MAAP,EAA5B,EAA6CH,KAA7C,CAAmD,CAAnD,EACCC,IADD,EADF,EAIC1B,IAJD,CAIM2B,aAAa;AACjB/B,QAAIJ,IAAJ,CAASmC,SAAT;AACD,GAND,EAOCpB,KAPD,CAOOC,SAAS;AACdC,YAAQC,GAAR,CAAYF,KAAZ;AACAZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,0BAAyBJ,KAAM,EAA3C,EAArB;AACD,GAVD;AAWD,CA7BD;;AA+BAnB,IAAI8C,MAAJ,CAAW,gBAAX,EAA6B,CAACxC,GAAD,EAAMC,GAAN,KAAc;AACzC,MAAIgC,MAAJ;AACA,MAAI;AACFA,aAAS,sBAAajC,IAAIkC,MAAJ,CAAWC,EAAxB,CAAT;AACD,GAFD,CAEE,OAAOtB,KAAP,EAAc;AACdZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,2BAA0BJ,KAAM,EAA5C,EAArB;AACA;AACD;;AAEDf,KAAGI,UAAH,CAAc,OAAd,EAAuBuC,SAAvB,CAAiC,EAAEb,KAAKK,MAAP,EAAjC,EAAkD5B,IAAlD,CAAwDqC,YAAD,IAAkB;AACvE,QAAIA,aAAaf,MAAb,CAAoBgB,CAApB,KAA0B,CAA9B,EAAiC1C,IAAIJ,IAAJ,CAAS,EAAEmB,QAAQ,IAAV,EAAT,EAAjC,KACKf,IAAIJ,IAAJ,CAAS,EAAEmB,QAAQ,2BAAV,EAAT;AACN,GAHD,EAICJ,KAJD,CAIOC,SAAS;AACdC,YAAQC,GAAR,CAAYF,KAAZ;AACAZ,QAAIe,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,EAAEoB,SAAU,0BAAyBJ,KAAM,EAA3C,EAArB;AACD,GAPD;AAQD,CAjBD;;AAmBAnB,IAAIK,GAAJ,CAAQ,GAAR,EAAa,CAACC,GAAD,EAAMC,GAAN,KAAc;AACzBA,MAAI2C,QAAJ,CAAa,eAAKC,OAAL,CAAa,mBAAb,CAAb;AACD,CAFD;;AAIA,qBAAYC,OAAZ,CAAoB,4BAApB,EAAkDzC,IAAlD,CAAuD0C,cAAc;AACnEjD,OAAKiD,UAAL;AACArD,MAAIsD,MAAJ,CAAW,IAAX,EAAiB,MAAM;AACrBlC,YAAQC,GAAR,CAAY,0BAAZ;AACD,GAFD;AAGD,CALD,EAKGH,KALH,CAKSC,SAAS;AAChBC,UAAQC,GAAR,CAAY,QAAZ,EAAsBF,KAAtB;AACD,CAPD","file":"server.js","sourcesContent":["import SourceMapSupport from 'source-map-support';\nSourceMapSupport.install();\nimport 'babel-polyfill';\n\nimport path from 'path';\nimport express from 'express';\nimport bodyParser from 'body-parser';\nimport { MongoClient, ObjectId } from 'mongodb';\nimport Hike from './hike.js';\n\nconst app = express();\napp.use(express.static('static'));\napp.use(bodyParser.json());\n\nlet db;\n\napp.get('/api/hikes', (req, res) => {\n  db.collection('hikes').find().toArray()\n  .then(hikes => {\n    const metadata = { total_count: hikes.length };\n    res.json({ _metadata: metadata, records: hikes });\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.post('/api/hikes', (req, res) => {\n  const newHike = req.body;\n  newHike.created = new Date();\n\n  const err = Hike.validateHike(newHike);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('hikes').insertOne(Hike.cleanupHike(newHike)).then(result =>\n    db.collection('hikes').find({ _id: result.insertedId }).limit(1)\n    .next()\n  )\n  .then(savedHike => {\n    res.json(savedHike);\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.get('/api/hikes/:id', (req, res) => {\n  let hikeId;\n  try {\n    hikeId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid hike ID format: ${error}` });\n    return;\n  }\n\n  db.collection('hikes').find({ _id: hikeId }).limit(1)\n  .next()\n  .then(hike => {\n    if (!hike) res.status(404).json({ message: `No such hike: ${hikeId}` });\n    else res.json(hike);\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.put('/api/hikes/:id', (req, res) => {\n  let hikeId;\n  try {\n    hikeId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid hike ID format: ${error}` });\n    return;\n  }\n\n  const hike = req.body;\n  delete hike._id;\n\n  const err = Hike.validateHike(hike);\n  if (err) {\n    res.status(422).json({ message: `Invalid request: ${err}` });\n    return;\n  }\n\n  db.collection('hikes').updateOne({ _id: hikeId }, Hike.convertHike(hike)).then(() =>\n    db.collection('hikes').find({ _id: hikeId }).limit(1)\n    .next()\n  )\n  .then(savedHike => {\n    res.json(savedHike);\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.delete('/api/hikes/:id', (req, res) => {\n  let hikeId;\n  try {\n    hikeId = new ObjectId(req.params.id);\n  } catch (error) {\n    res.status(422).json({ message: `Invalid hike ID format: ${error}` });\n    return;\n  }\n\n  db.collection('hikes').deleteOne({ _id: hikeId }).then((deleteResult) => {\n    if (deleteResult.result.n === 1) res.json({ status: 'OK' });\n    else res.json({ status: 'Warning: object not found' });\n  })\n  .catch(error => {\n    console.log(error);\n    res.status(500).json({ message: `Internal Server Error: ${error}` });\n  });\n});\n\napp.get('*', (req, res) => {\n  res.sendFile(path.resolve('static/index.html'));\n});\n\nMongoClient.connect('mongodb://localhost/hikeDB').then(connection => {\n  db = connection;\n  app.listen(3000, () => {\n    console.log('App started on port 3000');\n  });\n}).catch(error => {\n  console.log('ERROR:', error);\n});"]}